{"version":3,"sources":["context/GlobalState.js","components/DataService.js","components/SearchForm.js","components/Data.js","components/BoardData.js","components/Header.js","components/IconLocation.js","components/MarkerPopup.js","components/MarkerLocation.js","components/MapView.js","containers/App.js","index.js"],"names":["initialState","ip","data","location","timezone","isp","coord","lat","lng","reducer","state","action","type","payload","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","loadData","newData","getData","IP","domain","a","fetch","then","res","json","console","log","code","city","country","SearchFormWrapper","styled","form","Input","input","ButtonWrapper","button","domainRegex","RegExp","ipRegex","SearchForm","useContext","useState","setValue","getNewData","match","toast","error","onSubmit","e","preventDefault","placeholder","onChange","target","src","alt","DataWrapper","div","NameWrapper","h2","ContentWrapper","p","Data","name","content","BoardDataWrapper","section","BoardData","useEffect","defaultData","getDefaultData","renderContent","HeaderWrapper","header","TitleWrapper","h1","Header","IconLocation","L","icon","iconUrl","iconRetinaUrl","iconAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","MarkerPopup","Popup","MarkerLocation","Marker","position","MapView","Map","center","zoom","zoomControl","TileLayer","url","attribution","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAGMA,EAAe,CACnBC,GAAI,GACJC,KAAM,CACJD,GAAI,GACJE,SAAU,GACVC,SAAU,GACVC,IAAK,GACLC,MAAO,CACLC,IAAK,GACLC,IAAK,MAKLC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,2BACFF,GADL,IAEER,KAAMS,EAAOE,UAEjB,QACE,OAAOH,IAIAI,EAAgBC,0BAEhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWT,EAAST,GADA,mBACvCU,EADuC,KAChCS,EADgC,KAU9C,OACE,cAACL,EAAcM,SAAf,CAAwBC,MAAO,CAAEnB,KAAMQ,EAAMR,KAAMoB,SARpC,SAAAC,GACfJ,EAAS,CACPP,KAAM,YACNC,QAASU,MAKX,SACGN,KCzCMO,EAAO,uCAAG,WAAOC,EAAIC,GAAX,iBAAAC,EAAA,sEACFC,MAAM,uCAAD,OAHV,oCAGU,OAEpBH,EAAE,qBAAiBA,GAAaC,EAAN,kBAA0BA,GAAW,KAEjEG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UALG,UACf7B,EADe,OAOrB8B,QAAQC,IAAI/B,IAERA,EAAKgC,KATY,yCAUZ,MAVY,cAafX,EAAU,CACdtB,GAAIC,EAAKD,GACTE,SAAS,GAAD,OAAKD,EAAKC,SAASgC,KAAnB,aAA4BjC,EAAKC,SAASiC,SAClDhC,SAAUF,EAAKC,SAASC,SACxBC,IAAKH,EAAKG,IACVC,MAAO,CACLC,IAAKL,EAAKC,SAASI,IACnBC,IAAKN,EAAKC,SAASK,MApBF,kBAwBde,GAxBc,2CAAH,wD,88BCKpB,IAAMc,EAAoBC,IAAOC,KAAV,KAcjBC,EAAQF,IAAOG,MAAV,KAmBLC,EAAgBJ,IAAOK,OAAV,KAkBbC,EAAc,IAAIC,OACtB,wDAGIC,EAAU,IAAID,OAClB,wFAyDaE,EAtDI,WAAO,IAChBzB,EAAa0B,qBAAWlC,GAAxBQ,SADe,EAGG2B,mBAAS,IAHZ,mBAGhB5B,EAHgB,KAGT6B,EAHS,KAKjBC,EAAU,uCAAG,4BAAAxB,EAAA,0DAGbN,EAAM+B,MAAMN,GAHC,gCAICtB,EAAQH,GAJT,OAIfE,EAJe,6CAMCC,EAAQ,KAAMH,GANf,OAMfE,EANe,iBASZA,EATY,wBAWf8B,IAAMC,MAAN,0DAXe,2BAmBjBhC,EAASC,GAnBQ,4CAAH,qDAmChB,OACE,eAACc,EAAD,CAAmBkB,SAdA,SAAAC,GACnBA,EAAEC,iBACEpC,EAAM+B,MAAMN,IAAYzB,EAAM+B,MAAMR,GACtCO,IAEAE,IAAMC,MAAN,2DASF,UACE,cAACd,EAAD,CACEkB,YAAY,sCACZrC,MAAOA,EACPsC,SAAU,SAAAH,GAAC,OAAIN,EAASM,EAAEI,OAAOvC,UAEnC,cAACqB,EAAD,UACE,qBAAKmB,IAAI,yBAAyBC,IAAI,qB,0uBC/G9C,IAAMC,EAAczB,IAAO0B,IAAV,KAsBXC,EAAc3B,IAAO4B,GAAV,KAOXC,EAAiB7B,IAAO8B,EAAV,KAeLC,EATF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACE,eAACR,EAAD,WACE,cAACE,EAAD,UAAcK,IACd,cAACH,EAAD,UAAiBI,Q,wcClCvB,IAAMC,EAAmBlC,IAAOmC,QAAV,KA4CPC,EAvBG,WAAO,IAAD,EACK1B,qBAAWlC,GAA9BZ,EADc,EACdA,KAAMoB,EADQ,EACRA,SAEdqD,qBAAU,YACY,uCAAG,4BAAAhD,EAAA,sEACKH,IADL,OACfoD,EADe,OAErBtD,EAASsD,GAFY,2CAAH,qDAIpBC,KACC,IAEH,IAAMC,EAAgB,SAAAP,GAAO,OAAKA,GAAoB,cAEtD,OACE,eAACC,EAAD,WACE,cAAC,EAAD,CAAMF,KAAM,aAAcC,QAASO,EAAc5E,EAAKD,MACtD,cAAC,EAAD,CAAMqE,KAAM,WAAYC,QAASO,EAAc5E,EAAKC,YACpD,cAAC,EAAD,CAAMmE,KAAM,WAAYC,QAASO,EAAc5E,EAAKE,YACpD,cAAC,EAAD,CAAMkE,KAAM,MAAOC,QAASO,EAAc5E,EAAKG,W,4cCzCrD,IAAM0E,EAAgBzC,IAAO0C,OAAV,KAUbC,EAAe3C,IAAO4C,GAAV,KAoBHC,EAVA,WACb,OACE,eAACJ,EAAD,WACE,cAACE,EAAD,iCACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,+BC7BOG,E,OAAeC,EAAEC,KAAK,CACjCC,QAAS,4BACTC,cAAe,4BACfC,WAAY,KACZC,UAAW,KACXC,WAAY,KACZC,aAAc,KACdC,SAAU,CAAC,GAAI,IACfC,UAAW,uB,QCPAC,EAAc,SAAC,GAAc,IAAZzB,EAAW,EAAXA,KAC5B,OACE,cAAC0B,EAAA,EAAD,UACE,8BAAM1B,OCOG2B,EARQ,SAAC,GAAyB,IAAvB3F,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SAC/B,OACE,cAAC+F,EAAA,EAAD,CAAQC,SAAU7F,EAAOgF,KAAMF,EAA/B,SACE,cAAC,EAAD,CAAad,KAAMnE,OCiBViG,G,MAjBC,WAAO,IACblG,EAAS8C,qBAAWlC,GAApBZ,KAEAI,EAAoBJ,EAApBI,MAAOH,EAAaD,EAAbC,SAEf,OACE,eAACkG,EAAA,EAAD,CAAKC,OAAQhG,EAAOiG,KAAM,GAAIC,aAAa,EAA3C,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,0FAGd,cAAC,EAAD,CAAgBrG,MAAOA,EAAOH,SAAUA,S,sWCV9C,IAAMyG,GAAcC,YAAH,MAiCFC,GAbH,WACV,OACE,mCACE,eAAC,EAAD,WACE,cAACF,GAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCjCRG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f3101f5.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// Payload model\nconst initialState = {\n  ip: '',\n  data: {\n    ip: '',\n    location: '',\n    timezone: '',\n    isp: '',\n    coord: {\n      lat: '',\n      lng: '',\n    },\n  },\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOAD_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const loadData = newData => {\n    dispatch({\n      type: 'LOAD_DATA',\n      payload: newData,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider value={{ data: state.data, loadData }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","const API_KEY = 'at_aRNeciftOmdKxfRDpbSSisAXd5r1S';\n\nexport const getData = async (IP, domain) => {\n  const data = await fetch(\n    `https://geo.ipify.org/api/v1?apiKey=${API_KEY}${\n      IP ? `&ipAddress=${IP}` : '' || domain ? `&domain=${domain}` : ''\n    }`\n  ).then(res => res.json());\n\n  console.log(data);\n\n  if (data.code) {\n    return null;\n  }\n\n  const newData = {\n    ip: data.ip,\n    location: `${data.location.city}, ${data.location.country}`,\n    timezone: data.location.timezone,\n    isp: data.isp,\n    coord: {\n      lat: data.location.lat,\n      lng: data.location.lng,\n    },\n  };\n\n  return newData;\n};\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { GlobalContext } from '../context/GlobalState';\nimport { getData } from './DataService';\n\nconst SearchFormWrapper = styled.form`\n  height: 50px;\n  width: 500px;\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 80px;\n\n  @media screen and (max-width: 959px) {\n    width: 90%;\n    margin-bottom: 160px;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 10px 0 0 10px;\n  font-size: 18px;\n  font-family: inherit;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ButtonWrapper = styled.button`\n  border: none;\n  border-radius: 0 10px 10px 0;\n  background-color: hsl(0, 0%, 17%);\n  height: 100%;\n  padding: 10px 20px;\n  margin: 0;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    background-color: hsl(0, 0%, 30%);\n  }\n`;\n\nconst domainRegex = new RegExp(\n  '^(https?://)?([da-z.-]+).([a-z.]{2,6})([/w .-]*)*/?$'\n);\n\nconst ipRegex = new RegExp(\n  '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'\n);\n\nconst SearchForm = () => {\n  const { loadData } = useContext(GlobalContext);\n\n  const [value, setValue] = useState('');\n\n  const getNewData = async () => {\n    let newData;\n\n    if (value.match(ipRegex)) {\n      newData = await getData(value);\n    } else {\n      newData = await getData(null, value);\n    }\n\n    if (!newData) {\n      // alert('Not found data!');\n      toast.error(\n        `Not found!\n        Try with wwww.domain.com\n        `\n      );\n      return;\n    }\n\n    loadData(newData);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.match(ipRegex) || value.match(domainRegex)) {\n      getNewData();\n    } else {\n      toast.error(\n        `Not found!\n        Try with wwww.domain.com\n        `\n      );\n    }\n  };\n\n  return (\n    <SearchFormWrapper onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search for any IP address or domain\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <ButtonWrapper>\n        <img src=\"/images/icon-arrow.svg\" alt=\"icon-arrow\" />\n      </ButtonWrapper>\n    </SearchFormWrapper>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DataWrapper = styled.div`\n  &:not(:last-child) {\n    &::after {\n      content: '';\n      position: absolute;\n      top: 8%;\n      right: 0;\n      width: 1px;\n      height: 65px;\n      background-color: #f2f2f2;\n    }\n  }\n  padding: 0 20px;\n  position: relative;\n\n  @media screen and (max-width: 959px) {\n    border: 0 !important;\n    margin-bottom: 10px;\n    text-align: center;\n  }\n`;\n\nconst NameWrapper = styled.h2`\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  margin: 0;\n  color: hsl(0, 0%, 59%);\n`;\n\nconst ContentWrapper = styled.p`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin: 10px 0 0;\n`;\n\nconst Data = ({ name, content }) => {\n  return (\n    <DataWrapper>\n      <NameWrapper>{name}</NameWrapper>\n      <ContentWrapper>{content}</ContentWrapper>\n    </DataWrapper>\n  );\n};\n\nexport default Data;\n","import React, { useContext, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport Data from './Data';\n\nimport { GlobalContext } from '../context/GlobalState';\nimport { getData } from './DataService';\n\nconst BoardDataWrapper = styled.section`\n  background-color: #fff;\n  position: absolute;\n  top: 70%;\n\n  border-radius: 10px;\n  padding: 20px 0;\n  box-shadow: 0 1px 5px 1px rgba(0, 0, 0, 0.1);\n  width: 90%;\n  max-width: 800px;\n\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n\n  @media screen and (max-width: 959px) {\n    grid-template-columns: repeat(1, 1fr);\n    top: 45%;\n    max-width: 90%;\n  }\n`;\n\nconst BoardData = () => {\n  const { data, loadData } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const getDefaultData = async () => {\n      const defaultData = await getData();\n      loadData(defaultData);\n    };\n    getDefaultData();\n  }, []);\n\n  const renderContent = content => (content ? content : 'loading...');\n\n  return (\n    <BoardDataWrapper>\n      <Data name={'IP Address'} content={renderContent(data.ip)} />\n      <Data name={'Location'} content={renderContent(data.location)} />\n      <Data name={'Timezone'} content={renderContent(data.timezone)} />\n      <Data name={'ISP'} content={renderContent(data.isp)} />\n    </BoardDataWrapper>\n  );\n};\n\nexport default BoardData;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport SearchForm from './SearchForm';\nimport BoardData from './BoardData';\n\nconst HeaderWrapper = styled.header`\n  background-image: url('/images/pattern-bg.png');\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst TitleWrapper = styled.h1`\n  margin: 0;\n  color: #fff;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <TitleWrapper>IP Address Tracker</TitleWrapper>\n      <SearchForm />\n      <BoardData />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import L from 'leaflet';\n\nexport const IconLocation = L.icon({\n  iconUrl: '/images/icon-location.svg',\n  iconRetinaUrl: '/images/icon-location.svg',\n  iconAnchor: null,\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: [46, 56],\n  className: 'leaflet-venue-icon',\n});\n","import React from 'react';\nimport { Popup } from 'react-leaflet';\n\nexport const MarkerPopup = ({ name }) => {\n  return (\n    <Popup>\n      <div>{name}</div>\n    </Popup>\n  );\n};\n","import React from 'react';\nimport { Marker } from 'react-leaflet';\nimport { IconLocation } from './IconLocation';\nimport { MarkerPopup } from './MarkerPopup';\n\nconst MarkerLocation = ({ coord, location }) => {\n  return (\n    <Marker position={coord} icon={IconLocation}>\n      <MarkerPopup name={location} />\n    </Marker>\n  );\n};\n\nexport default MarkerLocation;\n","import React, { useContext } from 'react';\nimport { Map, TileLayer /*ZoomControl*/ } from 'react-leaflet';\nimport MarkerLocation from './MarkerLocation';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nimport 'leaflet/dist/leaflet.css';\n\nconst MapView = () => {\n  const { data } = useContext(GlobalContext);\n\n  const { coord, location } = data;\n\n  return (\n    <Map center={coord} zoom={13} zoomControl={false}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {/* <ZoomControl position={'bottomleft'} /> */}\n      <MarkerLocation coord={coord} location={location} />\n    </Map>\n  );\n};\n\nexport default MapView;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nimport Header from '../components/Header';\nimport MapView from '../components/MapView';\n\nimport { GlobalProvider } from '../context/GlobalState';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Rubik', sans-serif;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .leaflet-container {\n    height: 100vh;\n    width: 100%;\n    z-index: -1 !important;\n  }\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalProvider>\n        <GlobalStyle />\n        <ToastContainer />\n        <Header />\n        <MapView />\n      </GlobalProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}